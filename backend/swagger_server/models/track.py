# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.track_loc import TrackLoc  # noqa: F401,E501
from swagger_server import util


class Track(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, loc: TrackLoc=None, quality_scores: List[float]=None):  # noqa: E501
        """Track - a model defined in Swagger

        :param loc: The loc of this Track.  # noqa: E501
        :type loc: TrackLoc
        :param quality_scores: The quality_scores of this Track.  # noqa: E501
        :type quality_scores: List[float]
        """
        self.swagger_types = {
            'loc': TrackLoc,
            'quality_scores': List[float]
        }

        self.attribute_map = {
            'loc': 'loc',
            'quality_scores': 'qualityScores'
        }
        self._loc = loc
        self._quality_scores = quality_scores

    @classmethod
    def from_dict(cls, dikt) -> 'Track':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Track of this Track.  # noqa: E501
        :rtype: Track
        """
        return util.deserialize_model(dikt, cls)

    @property
    def loc(self) -> TrackLoc:
        """Gets the loc of this Track.


        :return: The loc of this Track.
        :rtype: TrackLoc
        """
        return self._loc

    @loc.setter
    def loc(self, loc: TrackLoc):
        """Sets the loc of this Track.


        :param loc: The loc of this Track.
        :type loc: TrackLoc
        """

        self._loc = loc

    @property
    def quality_scores(self) -> List[float]:
        """Gets the quality_scores of this Track.


        :return: The quality_scores of this Track.
        :rtype: List[float]
        """
        return self._quality_scores

    @quality_scores.setter
    def quality_scores(self, quality_scores: List[float]):
        """Sets the quality_scores of this Track.


        :param quality_scores: The quality_scores of this Track.
        :type quality_scores: List[float]
        """

        self._quality_scores = quality_scores
