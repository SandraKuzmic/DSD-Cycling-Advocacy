# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TrackSegments(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, start_lat: float=None, start_lon: float=None, end_lat: float=None, end_lon: float=None, quality_score: float=None):  # noqa: E501
        """TrackSegments - a model defined in Swagger

        :param start_lat: The start_lat of this TrackSegments.  # noqa: E501
        :type start_lat: float
        :param start_lon: The start_lon of this TrackSegments.  # noqa: E501
        :type start_lon: float
        :param end_lat: The end_lat of this TrackSegments.  # noqa: E501
        :type end_lat: float
        :param end_lon: The end_lon of this TrackSegments.  # noqa: E501
        :type end_lon: float
        :param quality_score: The quality_score of this TrackSegments.  # noqa: E501
        :type quality_score: float
        """
        self.swagger_types = {
            'start_lat': float,
            'start_lon': float,
            'end_lat': float,
            'end_lon': float,
            'quality_score': float
        }

        self.attribute_map = {
            'start_lat': 'startLat',
            'start_lon': 'startLon',
            'end_lat': 'endLat',
            'end_lon': 'endLon',
            'quality_score': 'qualityScore'
        }
        self._start_lat = start_lat
        self._start_lon = start_lon
        self._end_lat = end_lat
        self._end_lon = end_lon
        self._quality_score = quality_score

    @classmethod
    def from_dict(cls, dikt) -> 'TrackSegments':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Track_segments of this TrackSegments.  # noqa: E501
        :rtype: TrackSegments
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start_lat(self) -> float:
        """Gets the start_lat of this TrackSegments.


        :return: The start_lat of this TrackSegments.
        :rtype: float
        """
        return self._start_lat

    @start_lat.setter
    def start_lat(self, start_lat: float):
        """Sets the start_lat of this TrackSegments.


        :param start_lat: The start_lat of this TrackSegments.
        :type start_lat: float
        """

        self._start_lat = start_lat

    @property
    def start_lon(self) -> float:
        """Gets the start_lon of this TrackSegments.


        :return: The start_lon of this TrackSegments.
        :rtype: float
        """
        return self._start_lon

    @start_lon.setter
    def start_lon(self, start_lon: float):
        """Sets the start_lon of this TrackSegments.


        :param start_lon: The start_lon of this TrackSegments.
        :type start_lon: float
        """

        self._start_lon = start_lon

    @property
    def end_lat(self) -> float:
        """Gets the end_lat of this TrackSegments.


        :return: The end_lat of this TrackSegments.
        :rtype: float
        """
        return self._end_lat

    @end_lat.setter
    def end_lat(self, end_lat: float):
        """Sets the end_lat of this TrackSegments.


        :param end_lat: The end_lat of this TrackSegments.
        :type end_lat: float
        """

        self._end_lat = end_lat

    @property
    def end_lon(self) -> float:
        """Gets the end_lon of this TrackSegments.


        :return: The end_lon of this TrackSegments.
        :rtype: float
        """
        return self._end_lon

    @end_lon.setter
    def end_lon(self, end_lon: float):
        """Sets the end_lon of this TrackSegments.


        :param end_lon: The end_lon of this TrackSegments.
        :type end_lon: float
        """

        self._end_lon = end_lon

    @property
    def quality_score(self) -> float:
        """Gets the quality_score of this TrackSegments.


        :return: The quality_score of this TrackSegments.
        :rtype: float
        """
        return self._quality_score

    @quality_score.setter
    def quality_score(self, quality_score: float):
        """Sets the quality_score of this TrackSegments.


        :param quality_score: The quality_score of this TrackSegments.
        :type quality_score: float
        """

        self._quality_score = quality_score
