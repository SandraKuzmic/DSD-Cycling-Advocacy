# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ProcessedTripSpeed(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, max_speed: float=None, avg_speed: float=None):  # noqa: E501
        """ProcessedTripSpeed - a model defined in Swagger

        :param max_speed: The max_speed of this ProcessedTripSpeed.  # noqa: E501
        :type max_speed: float
        :param avg_speed: The avg_speed of this ProcessedTripSpeed.  # noqa: E501
        :type avg_speed: float
        """
        self.swagger_types = {
            'max_speed': float,
            'avg_speed': float
        }

        self.attribute_map = {
            'max_speed': 'maxSpeed',
            'avg_speed': 'avgSpeed'
        }
        self._max_speed = max_speed
        self._avg_speed = avg_speed

    @classmethod
    def from_dict(cls, dikt) -> 'ProcessedTripSpeed':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ProcessedTrip_speed of this ProcessedTripSpeed.  # noqa: E501
        :rtype: ProcessedTripSpeed
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_speed(self) -> float:
        """Gets the max_speed of this ProcessedTripSpeed.

        Expressed in meters per second  # noqa: E501

        :return: The max_speed of this ProcessedTripSpeed.
        :rtype: float
        """
        return self._max_speed

    @max_speed.setter
    def max_speed(self, max_speed: float):
        """Sets the max_speed of this ProcessedTripSpeed.

        Expressed in meters per second  # noqa: E501

        :param max_speed: The max_speed of this ProcessedTripSpeed.
        :type max_speed: float
        """

        self._max_speed = max_speed

    @property
    def avg_speed(self) -> float:
        """Gets the avg_speed of this ProcessedTripSpeed.

        Expressed in meters per second  # noqa: E501

        :return: The avg_speed of this ProcessedTripSpeed.
        :rtype: float
        """
        return self._avg_speed

    @avg_speed.setter
    def avg_speed(self, avg_speed: float):
        """Sets the avg_speed of this ProcessedTripSpeed.

        Expressed in meters per second  # noqa: E501

        :param avg_speed: The avg_speed of this ProcessedTripSpeed.
        :type avg_speed: float
        """

        self._avg_speed = avg_speed
